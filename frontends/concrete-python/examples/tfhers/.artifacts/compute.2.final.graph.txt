 %0 = tfhers_x                      # EncryptedScalar<tfhers<uint8, 3, 2, params=crypto_params<lwe_dim=909, glwe_dim=1, poly_size=4096, pbs_base_log=15, pbs_level=2, lwe_noise_distribution=1.0994794733558207e-06, glwe_noise_distribution=2.168404344971009e-19, encryption_key_choice=BIG>>>        ∈ [0, 255]
 %1 = tfhers_y                      # EncryptedScalar<tfhers<uint8, 3, 2, params=crypto_params<lwe_dim=909, glwe_dim=1, poly_size=4096, pbs_base_log=15, pbs_level=2, lwe_noise_distribution=1.0994794733558207e-06, glwe_noise_distribution=2.168404344971009e-19, encryption_key_choice=BIG>>>        ∈ [0, 255]
 %2 = aa_0                          # EncryptedScalar<tfhers<uint8, 3, 2, params=crypto_params<lwe_dim=909, glwe_dim=1, poly_size=4096, pbs_base_log=15, pbs_level=2, lwe_noise_distribution=1.0994794733558207e-06, glwe_noise_distribution=2.168404344971009e-19, encryption_key_choice=BIG>>>        ∈ [0, 255]
 %3 = tfhers_to_native(%0)          # EncryptedScalar<uint8>                                                                                                                                                                                                                                            ∈ [2, 20]
 %4 = tfhers_to_native(%1)          # EncryptedScalar<uint8>                                                                                                                                                                                                                                            ∈ [2, 16]
 %5 = tfhers_to_native(%2)          # EncryptedScalar<uint8>                                                                                                                                                                                                                                            ∈ [2, 18]
 %6 = multiply(%5, %3)              # EncryptedScalar<uint8>                                                                                                                                                                                                                                            ∈ [4, 240]
 %7 = multiply(%6, %4)              # EncryptedScalar<uint12>                                                                                                                                                                                                                                           ∈ [8, 2640]
 %8 = 213                           # ClearScalar<uint8>                                                                                                                                                                                                                                                ∈ [213, 213]
 %9 = remainder(%7, %8)             # EncryptedScalar<uint8>                                                                                                                                                                                                                                            ∈ [3, 201]
%10 = tfhers_from_native(%9)        # EncryptedScalar<tfhers<uint8, 3, 2, params=crypto_params<lwe_dim=909, glwe_dim=1, poly_size=4096, pbs_base_log=15, pbs_level=2, lwe_noise_distribution=1.0994794733558207e-06, glwe_noise_distribution=2.168404344971009e-19, encryption_key_choice=BIG>>>        ∈ [3, 201]
return %10
